**/migrations
*.DS_Store
**/__pycache__
**/.DS_Store

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class


Pattern	Example matches	Explanation*
**/logs	logs/debug.log
logs/monday/foo.bar
build/logs/debug.log	You can prepend a pattern with a double asterisk to match directories anywhere in the repository.
**/logs/debug.log	logs/debug.log
build/logs/debug.log
but not
logs/build/debug.log	You can also use a double asterisk to match files based on their name and the name of their parent directory.
*.log	debug.log
foo.log
.log
logs/debug.log	An asterisk is a wildcard that matches zero or more characters.
*.log
!important.log	debug.log
trace.log
but not
important.log
logs/important.log	Prepending an exclamation mark to a pattern negates it. If a file matches a pattern, but also matches a negating pattern defined later in the file, it will not be ignored.
*.log
!important/*.log
trace.*	debug.log
important/trace.log
but not
important/debug.log	Patterns defined after a negating pattern will re-ignore any previously negated files.
/debug.log	debug.log
but not
logs/debug.log	Prepending a slash matches files only in the repository root.
debug.log	debug.log
logs/debug.log	By default, patterns match files in any directory
debug?.log	debug0.log
debugg.log
but not
debug10.log	A question mark matches exactly one character.
debug[0-9].log	debug0.log
debug1.log
but not
debug10.log	Square brackets can also be used to match a single character from a specified range.
debug[01].log	debug0.log
debug1.log
but not
debug2.log
debug01.log	Square brackets match a single character form the specified set.
debug[!01].log	debug2.log
but not
debug0.log
debug1.log
debug01.log	An exclamation mark can be used to match any character except one from the specified set.
debug[a-z].log	debuga.log
debugb.log
but not
debug1.log	Ranges can be numeric or alphabetic.
logs	logs
logs/debug.log
logs/latest/foo.bar
build/logs
build/logs/debug.log	If you don't append a slash, the pattern will match both files and the contents of directories with that name. In the example matches on the left, both directories and files named logs are ignored
env/
# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/